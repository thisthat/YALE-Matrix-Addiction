read.csv("./classes/SE-Empirical/data-sets/chromium-data/chrome-log-bugs-multiple.csv")
read.csv("./classes/SE-Empirical/data-sets/chromium-data/bugtable.csv")
read.csv("./classes/SE-Empirical/data-sets/g2t/raw_data/M1-M2/AllRawData.csv")
read.csv("./classes/SE-Empirical/data-sets/g2t/raw_data/M1-M2/RawDataFemale.csv")
data.path <- "./data-sets/g2t/Raw_Data/Effort/"
data.path <- "./data-sets/g2t/Raw_Data/Effort/"
in.file <-"AllEffort.csv"
e <- read.csv(paste(data.path,in.file,sep="/"), header = T, sep = ",")
colnames(d)
data.path <- "./data-sets/g2t/raw_data/Effort/"
in.file <-"AllEffort.csv"
e <- read.csv(paste(data.path,in.file,sep="/"), header = T, sep = ",")
colnames(d)
d$TimeAll
d1 <- subset(d,  Model=='G')
d2 <- subset(d,  Model=='T')
mt <- sqrt(var(d$TimeAll))
summary(d1$TimeAll)
summary(d2$TimeAll)
png(filename = "MyFile.png",
width = 480, height = 480, units = "px",
pointsize = 12, bg = "white",
type = c("Xlib"))
boxplot(d2$TimeWholeModel, d1$TimeWholeModel)
dev.off()
e1 <- subset(e,  Model=='G')
e2 <- subset(e,  Model=='T')
e1c <- subset(e,  Model=='G' & AFD.IrM < 400 & AFD.M <400  & AFD.ReM < 400)
e2c <- subset(e,  Model=='T' & AFD.IrM < 400& AFD.M <400 & AFD.ReM < 400)
png(filename = "MyFile.png",
width = 480, height = 480, units = "px",
pointsize = 12, bg = "white",
type = c("Xlib"))
boxplot(e2$AFD.M, e1$AFD.M,e2$AFD.Q, e1$AFD.Q, e2$AFD.ReM, e1$AFD.ReM,e2$AFD.IrM, e1$AFD.IrM)
dev.off()
boxplot(e2c$AFD.M, e1c$AFD.M,e2c$AFD.Q, e1c$AFD.Q, e2c$AFD.ReM, e1c$AFD.ReM,e2c$AFD.IrM, e1c$AFD.IrM)
library(vioplot)
vioplot(e2c$AFD.M, e1c$AFD.M,e2c$AFD.Q, e1c$AFD.Q, e2c$AFD.ReM, e1c$AFD.ReM,e2c$AFD.IrM, e1c$AFD.IrM, na.rm=T)
# remove the NaN
e01c <- e1[is.finite(e1$AFD.M),]
e02c <- e2[is.finite(e2$AFD.M),]
data.path <- "./data-sets/g2t/raw_data/M1-M2/"
in.file <-"AllRawData.csv"
d <- read.csv(paste(data.path,in.file,sep="/"), header = T, sep = ",")
library(tm)
single_a <- read.csv("strategy_0_single_thread.csv")
single_b <- read.csv("strategy_1_single_thread.csv")
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_a <- read.csv("strategy_0_multiple_thread.csv")
multiple_b <- read.csv("strategy_1_multiple_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
setwd("~/classes/CloudComputing/project/project_1/evaluation")
single_a <- read.csv("strategy_0_single_thread.csv")
single_b <- read.csv("strategy_1_single_thread.csv")
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_a <- read.csv("strategy_0_multiple_thread.csv")
multiple_b <- read.csv("strategy_1_multiple_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
View(single_a)
single_a <- read.csv("strategy_0_single_thread.csv")
single_b <- read.csv("strategy_1_single_thread.csv")
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_a <- read.csv("strategy_0_multiple_thread.csv")
multiple_b <- read.csv("strategy_1_multiple_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeA <- single_a$timeTot
timeB <- single_b$timeTot
timeC <- single_c$timeTot
timeInitA <- single_a$timeData
timeInitB <- single_b$timeData
timeInitC <- single_c$timeData
dataA <- c()
dataB <- c()
dataC <- c()
for (i in 1:length(timeA)) dataA[i] <- timeInitA[i] / (timeA[i] - timeInitA[i])
for (i in 1:length(timeB)) dataB[i] <- timeInitB[i] / (timeB[i] - timeInitB[i])
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i])
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_a <- read.csv("strategy_0_multiple_thread.csv")
multiple_b <- read.csv("strategy_1_multiple_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeC <- single_c$timeTot
timeInitC <- single_c$timeData
dataC <- c()
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i])
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_a <- read.csv("strategy_0_multiple_thread.csv")
multiple_b <- read.csv("strategy_1_multiple_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeC <- single_c$timeTot
timeInitC <- single_c$timeData
dataC <- c()
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i])
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeC <- single_c$timeTot
timeInitC <- single_c$timeData
dataC <- c()
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i])
boxplot(dataC)
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeC <- single_c$timeTot
timeInitC <- single_c$timeData
dataC <- c()
m_timeC <- multiple_c$timeTot
m_timeInitC <- multiple_c$timeData
m_dataC <- c()
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i])
for (i in 1:length(timeC)) m_dataC[i] <- m_timeInitC[i] / (m_timeC[i] - m_timeInitC[i])
boxplot(dataC, m_dataC)
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeC <- single_c$timeTot
timeInitC <- single_c$timeData
dataC <- c()
m_timeC <- multiple_c$timeTot
m_timeInitC <- multiple_c$timeData
m_dataC <- c()
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i])
for (i in 1:length(timeC)) m_dataC[i] <- m_timeInitC[i] / (m_timeC[i] - m_timeInitC[i])
boxplot(dataC, m_dataC, names = c("Single Thread", "Multiple Thread"))
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeC <- single_c$timeTot
timeInitC <- single_c$timeData
dataC <- c()
m_timeC <- multiple_c$timeTot
m_timeInitC <- multiple_c$timeData
m_dataC <- c()
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i]) * 100
for (i in 1:length(timeC)) m_dataC[i] <- m_timeInitC[i] / (m_timeC[i] - m_timeInitC[i]) * 100
boxplot(dataC, m_dataC, names = c("Single Thread", "Multiple Thread"))
title(main="P value", sub = "", xlab = "threads", ylab="P")
single_c <- read.csv("strategy_2_single_thread.csv")
multiple_c <- read.csv("strategy_2_multiple_thread.csv")
timeC <- single_c$timeTot
timeInitC <- single_c$timeData
dataC <- c()
m_timeC <- multiple_c$timeTot
m_timeInitC <- multiple_c$timeData
m_dataC <- c()
for (i in 1:length(timeC)) dataC[i] <- timeInitC[i] / (timeC[i] - timeInitC[i]) * 100
for (i in 1:length(timeC)) m_dataC[i] <- m_timeInitC[i] / (m_timeC[i] - m_timeInitC[i]) * 100
boxplot(dataC, m_dataC, names = c("Single Thread", "Multiple Thread"))
title(main="Overhead", sub = "", xlab = "", ylab="Time spent on preprocess (%)")
